syntax = "proto3";

import "messages/text_message.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

package com.grammatek.text;

// Service for text preprocessing for TTS
service Preprocessing {

  // Preprocess text for TTS, including conversion to phonetic representation (g2p)
  rpc Preprocess(PreprocessRequest) returns (PreprocessedResponse) {
    option (google.api.http) = {
      post: "/preprocess"
      body: "*"
    };
  }

  // Normalize text for TTS, returns normalized text prepared for g2p
  rpc Normalize(NormalizeRequest) returns (NormalizedResponse) {
    option (google.api.http) = {
      post: "/normalize"
      body: "*"
    };
  }

  // Clean text for TTS, returns clean text without non-valid characters (not normalized!)
  rpc Clean(TextCleanRequest) returns (TextCleanResponse) {
    option (google.api.http) = {
      post: "/clean"
      body: "*"
    };
  }

  // Transcribe text for TTS, returns phonetic representation of input text
  rpc Transcribe(G2PRequest) returns (PreprocessedResponse) {
    option (google.api.http) = {
      post: "/transcribe"
      body: "*"
    };
  }

  // Default settings for the text processing pipeline, including parameters for text cleaning,
  // normalizing and transcription (g2p)
  rpc GetDefaultParameters(google.protobuf.Empty) returns (DefaultProcessingResponse) {}
    option (google.api.http) = {
      get: "/defaultparameters"
    };
    
  rpc GetVersion(google.protobuf.Empty) returns (AbiVersionResponse) {
    option (google.api.http) = {
      get: "/version"
    };
  }
}